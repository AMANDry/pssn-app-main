def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion Math.max(flutter.compileSdkVersion, 33)
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "help.events.city"
        minSdkVersion Math.max(flutter.minSdkVersion, 21)
        targetSdkVersion Math.max(flutter.targetSdkVersion, 29)
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        resValue "string", "app_name", project.APP_NAME
    }

    signingConfigs {
        dev {
           keyAlias project.ANDROID_DEV_KEY_ALIAS
           keyPassword project.ANDROID_DEV_KEY_PASSWORD
           storeFile file(project.ANDROID_DEV_STORE_FILE)
           storePassword project.ANDROID_DEV_STORE_PASSWORD
       }

       release {
           keyAlias project.ANDROID_RELEASE_KEY_ALIAS
           keyPassword project.ANDROID_RELEASE_KEY_PASSWORD
           storeFile file(project.ANDROID_RELEASE_STORE_FILE)
           storePassword project.ANDROID_RELEASE_STORE_PASSWORD
       }
   }

    buildTypes {
        debug {
            signingConfig signingConfigs.dev
        }

        profile {
            signingConfig signingConfigs.dev
        }

        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // For local push notifications
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
